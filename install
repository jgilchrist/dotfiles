#!/bin/bash

RED=1
GREEN=2
YELLOW=3
BLUE=4

log() {
    printf "["
    tput setaf $3
    printf "$1"
    tput sgr0
    printf "] "
    printf "$2"
    printf "\n"
}

success() {
    log "Success" "$1" ${GREEN}
}

failure() {
    log "Failure" "$1" ${RED}
}

notice() {
    log " Notice" "$1" ${BLUE}
}

skipped() {
    log "Skipped" "$1" ${YELLOW}
}

timestamp() {
    date +%s
}

# Gets the path of the script, wherever it's called from.
DOTFILES="$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)"
BACKUP_DIR=${DOTFILES}/.backup/$(timestamp)

ensure_backup_dir() {
    if [ -d ${BACKUP_DIR} ]; then
        return
    fi

    mkdir -p ${BACKUP_DIR}
    notice "Created backup folder: ${BACKUP_DIR}"
}

backup() {
    ensure_backup_dir

    mv $1 $2
    success "Backed up file: $1"
}

install() {
    DOTFILE="${HOME}/.$1"
    ACTUALFILE="${DOTFILES}/$1"

    if [ $# -ne 1 ]; then
        printf "Function install takes one argument only, not $#"
        exit
    fi

    # Check actual dotfile exists to link to
    if [ ! -f ${ACTUALFILE} ]; then
        failure "File ${ACTUALFILE} does not exist."
        return
    fi

    # If there is already a real dotfile with this name
    if [ -f ${DOTFILE} ] && [ ! -h ${DOTFILE} ]; then
        # Back it up
        backup ${DOTFILE} ${BACKUP_DIR}
    fi

    # If the dotfile exists but is a symlink
    if [ -h ${DOTFILE} ]; then
        # If it is already correct
        if [ "$(readlink -f ${DOTFILE})" == "${ACTUALFILE}" ]; then
            # Skip
            skipped "$1"
            return
        else
            mv ${DOTFILE} ${BACKUP_DIR}
            notice "Backed up existing symlink $1"
        fi
    fi

    ln -s ${ACTUALFILE} ${DOTFILE}
    success "$1"
}

main() {
    # Bash
    install bashrc
    install bash_aliases
    install bash_prompt
    install bash_colors

    # Git
    install gitconfig
    install gitignore

    # Ack
    install ackrc

    # Tmux
    install tmux.conf

    [ ! -f ${HOME}/.env ] && echo "Create ~/.env for machine specific environment modifications"
    [ ! -f ${HOME}/.path ] && echo "Create ~/.path for machine specific path modifications"
    [ ! -f ${HOME}/.aliases ] && echo "Create ~/.aliases for machine specific aliases"
}

main
