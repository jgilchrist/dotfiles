#!/bin/bash

# Gets the path of the script, wherever it's called from.
DOTFILES="$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)"
BACKUP=${DOTFILES}/.backup

RED=1
GREEN=2
YELLOW=3

log() {
    printf "["
    tput setaf $3
    printf "$1"
    tput sgr0
    printf "] "
    printf "$2"
    printf "\n"
}

success() {
    log "Success" "$1" ${GREEN}
}

failure() {
    log "Failure" "$1" ${RED}
}

notice() {
    log " Notice" "$1" ${YELLOW}
}

skipped() {
    log "Skipped" "$1" ${YELLOW}
}

make_backup_folder() {
    if [ -d ${BACKUP} ]; then
        rm -rf ${BACKUP}
        success "Removed old backups"
    fi

    mkdir -p ${BACKUP}
}

install() {
    DOTFILE="${HOME}/.$1"
    ACTUALFILE="${DOTFILES}/$1"

    if [ $# -ne 1 ]; then
        printf "Function install takes one argument only, not $#"
        exit
    fi

    # Check actual dotfile exists to link to
    if [ ! -f ${ACTUALFILE} ]; then
        failure "File ${ACTUALFILE} does not exist."
        exit
    fi

    # If there is already a real dotfile with this name
    if [ -f ${DOTFILE} ] && [ ! -h ${DOTFILE} ]; then
        # Back it up
        mv ${DOTFILE} ${BACKUP}
        notice "Backed up existing file $1"
    fi

    # If the dotfile exists but is a symlink
    if [ -h ${DOTFILE} ]; then
        # If it is already correct
        if [ "$(readlink -f ${DOTFILE})" == "${ACTUALFILE}" ]; then
            # Skip
            skipped "$1"
            return
        else
            mv ${DOTFILE} ${BACKUP}
            notice "Backed up existing symlink $1"
        fi
    fi

    ln -s ${ACTUALFILE} ${DOTFILE}
    success "$1"
}

main() {
    make_backup_folder

    # Bash
    install bashrc
    install bash_aliases
    install bash_prompt
    install bash_colors

    # Git
    install gitconfig
    install gitignore

    # Ack
    install ackrc

    # Tmux
    install tmux.conf
}

main
