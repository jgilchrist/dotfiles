let mapleader=','
let maplocalleader=','

" Plugins {{{

call plug#begin()

" Extensions to vim's language
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'wellle/targets.vim'
Plug 'justinmk/vim-sneak'
Plug 'tommcdo/vim-exchange'
Plug 'tommcdo/vim-lion'

" File management
Plug 'ctrlpvim/ctrlp.vim'
    let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
    nnoremap <C-B> :CtrlPBuffer<cr>

Plug 'justinmk/vim-dirvish'
    let g:dirvish_mode = ':sort r /[^\/]$/'

" Syntax
Plug 'w0rp/ale'

" Languages
Plug 'rust-lang/rust.vim'
Plug 'leafgarland/typescript-vim'

" Colorscheme
Plug 'w0ng/vim-hybrid'

" Extras
Plug 'itchyny/lightline.vim'
Plug 'junegunn/goyo.vim'

" Experiments
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-characterize'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-unimpaired'

runtime plugins.local
call plug#end()

packadd! matchit

" }}}

" Settings {{{

filetype plugin indent on

set encoding=utf-8
set fileencoding=utf-8

" i - [noeol] instead of [Incomplete last line]
" x - [unix] instead of [unix format]
" t - Truncate file message at start if it is too long to fit on the command line
" I - Don't show the intro message when starting Vim
set shortmess=ixtI

" Appearance
if !exists('g:syntax_on')
    syntax enable
endif
colorscheme hybrid
set background=dark

set hidden

set number
set ruler
set showcmd
set cursorline
set nowrap
set laststatus=2
set scrolloff=3
set sidescrolloff=3
set synmaxcol=300
set listchars=tab:\|\ ,trail:∙,extends:>,precedes:<,nbsp:‡
set breakindent
set showbreak=>\ 
set breakindentopt=shift:2

set wildmenu
set wildmode=list:longest,full

" Indentation
set autoindent
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set backspace=indent,eol,start

" Search
set incsearch
set ignorecase
set smartcase
set infercase

" Redrawing
set lazyredraw
set ttyfast
set ttimeoutlen=50

" Disable all bells (audio, flash)
set belloff=all

" Allow the cursor to move anywhere in visual block mode
set virtualedit=block

" Automatically read the file if it changed outside vim
set autoread
set modeline
set modelines=1

" Open splits to the right and to the bottom
set splitbelow
set splitright

" Resize splits when vim itself is resized
augroup ResizeSplits
    au!
    au VimResized * :wincmd =
augroup END

" Use a nice vertical separator for splits
set fillchars+=vert:│

" Flash matching braces for 200ms
set showmatch
set matchtime=2

" Don't search through includes for completion as this can be slow
set complete-=i

" When joining lines, delete comment characters if appropriate
set formatoptions+=j
set nojoinspaces

" Use ripgrep for vim's :grep command
if executable("rg")
    set grepprg=rg\ --vimgrep
    set grepformat=%f:%l:%c:%m
endif

" Only display the cursorline on windows that are in focus
augroup highlight_follows_focus
    autocmd!
    au WinEnter * set cursorline
    au WinLeave * set nocursorline
    au FocusGained * set cursorline
    au FocusLost * set nocursorline
augroup END

" Backups/Swapfiles/Undofiles {{{

" Keep backups, swapfiles and undofiles if we're not root
if exists('$SUDO_USER')
    set viminfo=
    set nobackup
    set nowritebackup
    set noswapfile
    set noundofile
else
    set viminfo+=n~/.vim/tmp/viminfo
    set backupdir=~/.vim/tmp/backup
    set directory=~/.vim/tmp/swap
    set undodir=~/.vim/tmp/undo
    set undofile
endif

" }}}

if has('gui_running')
    " Remove scrollbars and menus from the GUI
    set guioptions=c
endif

" }}}

" Mappings {{{

" Sanity {{{
" These mappings improve consistency in Vim's commands

" Saner line handling
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k
xnoremap j gj
xnoremap k gk
xnoremap gj j
xnoremap gk k

" :W and :Q still work
command! W write
command! Q quit

" Delete and paste without overwriting the paste register
nnoremap x "_x
xnoremap p "_dp

" Make Y behave like other capitals
nnoremap Y y$

" When joining lines, keep the cursor in place
nnoremap J mzJ`z

" }}}

" Edit/source configuration
nnoremap <leader>ec :edit $MYVIMRC<cr>
nnoremap <leader>el :edit $MYVIMRC.local<cr>
nnoremap <leader>sc :source $MYVIMRC<cr>

" Remap H and L to start and end of the line
nnoremap H ^
nnoremap L $
xnoremap H ^
xnoremap L $

" Easy split navigation
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" <leader>a selects the whole buffer
nnoremap <leader>a ggVG

" gp selects the last pasted text
nnoremap gp `[v`]

" <leader> shortcuts for copying/pasting to/from system clipboard
nnoremap <leader>y "+y
xnoremap <leader>y "+y
nnoremap <leader>p "+p
xnoremap <leader>p "+p

" Shift-Q repeats the q macro
nnoremap Q @q
xnoremap Q :normal! @q<CR>

" Quickly edit the Q macro
nnoremap <leader>eq :<c-u><c-r><c-r>='let @q = '. string(getreg('q'))<cr><c-f><left>

" Go back to the last buffer
nnoremap <silent> <backspace> <C-^>

" Use the arrow keys to resize viewports
nnoremap <Right> :vertical resize +2<CR>
nnoremap <Left> :vertical resize -2<CR>

" }}}

runtime vimrc.local

" vim: set fdm=marker:
