if empty(glob("~/.vim/autoload/plug.vim"))
    call system('mkdir -p ~/.vim/autoload')
    call system('curl -fLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim')
endif

call plug#begin("~/.vim/bundle")

" File management
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'

" Code
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/syntastic'
Plug 'SirVer/ultisnips'
Plug 'AndrewRadev/switch.vim'

" Vim enhancements
Plug 'jgilchrist/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'junegunn/goyo.vim'

" Languages
Plug 'rust-lang/rust.vim'
Plug 'cespare/vim-toml'

" Colorschemes
Plug 'whatyouhide/vim-gotham'
Plug 'chriskempson/base16-vim'

" Local plugins
Plug 'lang', {'frozen': 1}

call plug#end()

" Extended matching for latex, HTML, etc.
runtime macros/matchit.vim

" Settings {{{

filetype plugin indent on

set encoding=utf-8

" Don't show the intro message when starting Vim
set shortmess=I

" Appearance
syntax on
colorscheme gotham256

set number
set ruler
set showcmd
set nowrap
set laststatus=2
set scrolloff=3
set colorcolumn=101
set synmaxcol=800 " Don't attempt to highlight lines longer than 800 chars

set wildmenu
set wildmode=list:longest,full


" Indentation
set autoindent
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set backspace=indent,eol,start


" Search
set incsearch
set hlsearch
set ignorecase smartcase


" Redrawing
set lazyredraw
set ttyfast


" Automatically read the file if it changed outside vim
set autoread


" Open splits to the right and to the bottom
set splitbelow
set splitright


" Resize splits when vim itself is resized
augroup ResizeSplits
    au!
    au VimResized * :wincmd =
augroup END


" Flash matching braces for 200ms
set showmatch
set matchtime=2


" Don't keep swap files or backups (use version control instead!)
set noswapfile
set nobackup


" }}}

" Mappings {{{
"
" Leader key as ,
" ------------------------------------------------------------------------------
let mapleader=","
noremap \ ,

" Edit/source configuration
" ------------------------------------------------------------------------------
nnoremap <leader>ec :vsplit $MYVIMRC<cr>
nnoremap <leader>sc :source $MYVIMRC<cr>

" Disable the arrow keys
" ------------------------------------------------------------------------------
nnoremap <Up> <nop>
nnoremap <Down> <nop>
nnoremap <Left> <nop>
nnoremap <Right> <nop>

" Saner line handling
" ------------------------------------------------------------------------------
nnoremap j gj
nnoremap k gk

" Remap H and L to start and end of the line
" ------------------------------------------------------------------------------
noremap H ^
noremap L $

" Easy split navigation
" ------------------------------------------------------------------------------
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" :W and :Q still work
" ------------------------------------------------------------------------------
command! W write
command! Q quit
cnoremap sudowrite w !sudo tee % >/dev/null

" Delete and paste without overwriting the paste register
" ------------------------------------------------------------------------------
nnoremap x "_x
vnoremap p "_c<Esc>p

" Make Y behave like other capitals
" ------------------------------------------------------------------------------
nnoremap Y y$

" Shift-Q repeats the q macro
" ------------------------------------------------------------------------------
nnoremap Q @q

" When joining lines, keep the cursor in place
" ------------------------------------------------------------------------------
nnoremap J mzJ`z

" Enter removes search highlighting
" ------------------------------------------------------------------------------
nnoremap <silent> <CR> :nohlsearch<CR>

" Space toggles the current fold
" ------------------------------------------------------------------------------
nnoremap <space> za

" Close the current buffer with <leader>q
" ------------------------------------------------------------------------------
nnoremap <leader>q :q<CR>

" Keep search matches in the middle of the window
" ------------------------------------------------------------------------------
nnoremap n nzzzv
nnoremap N Nzzzv

" Ctrl-B is Ctrl-P buffer list
" ------------------------------------------------------------------------------
nnoremap <c-B> :CtrlPBuffer<cr>
inoremap <c-B> :CtrlPBuffer<cr>

" Surround with 's'
" ------------------------------------------------------------------------------
nmap s ys
vmap s S

" Switch with 'S'
" ------------------------------------------------------------------------------
nnoremap <silent> S :Switch<cr>

" Add an arrow -> with <leader>a
" ------------------------------------------------------------------------------
inoremap <leader>a ->

" }}}

" Plugin settings {{{
"

" CtrlP
" ------------------------------------------------------------------------------

" Use Ag for faster CtrlP. It automatically repects .gitignore, but must
" be told to ignore version control directories.
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden
                            \ --ignore-dir .git
                            \ --ignore-dir .svn
                            \ --ignore-dir .hg
                            \ -g ""'

" Syntastic
" ------------------------------------------------------------------------------
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1

" NERDTree
" ------------------------------------------------------------------------------
nnoremap <silent> <leader>nt :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$', '\.class$']

" NERDCommenter
" ------------------------------------------------------------------------------
let g:NERDSpaceDelims=1

" }}}

" GUI {{{

if has('gui_running')
    if has('mac')
        set guifont=Monaco:h11
    else
        set guifont=Inconsolata\ 12
    endif

    color gotham
    set cursorline

    " Remove scrollbars and menus from the GUI
    set guioptions=c
endif

" }}}

" vim: set fdm=marker:
