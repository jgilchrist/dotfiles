[user]
name = "Jonathan Gilchrist"
email = "jonnygilchrist@gmail.com"

[ui]
default-command = ["log", "-r", "default()"]
diff-editor = ":builtin"
merge-editor = "vim"

[git]
private-commits = "private()"
push-new-bookmarks = true
write-change-id-header = true

[merge-tools.vim]
program = "nvim"
merge-tool-edits-conflict-markers = true
merge-args = ["$output"]

[revset-aliases]
"default()" = "builtin_default() ~ experiment()"

# `additional_heads()` exists to add refs which should always be show in the log
# for a particular repo without redefining the entire revset
"builtin_default()" = "builtin_default(2)"
"builtin_default(n)" = "present(@) | ancestors(immutable_heads().., n) | present(trunk()) | additional_heads()"
'additional_heads()' = 'none()'

"private()" = "wip()"

# `additional_immutable_heads()` exists to add immutable heads in a repo's
# config without redefining the entire revset
'immutable_heads()' = 'trunk() | tags() | untracked_remote_bookmarks() | additional_immutable_heads()'
'additional_immutable_heads()' = 'none()'

"draft()" = "mutable() & mine()"

# Drafts that should be autorebased when we run `jj autorebase`
# draft_autorebase_ignore allows individual repositories to configure
# changes that should be ignored.
"draft_autorebase()" = "draft() ~ draft_autorebase_ignore()"
"draft_autorebase_ignore()" = "none()"

'closest_bookmark(to)' = 'heads(::to & bookmarks())'

"experiment()" = "draft() & description(glob-i:\"x:*\")"
"wip()" = "draft() & description(glob-i:\"wip:*\")"

"last()" = "last(20)"
"last(n)" = "ancestors(@, n)"

"stack()" = "stack(@)"
"stack(from)" = "ancestors(reachable(from, mutable()), 2)"

[aliases]
b = ["bookmark"]
s = ["status"]
ds = ["describe"]
l = ["log", "-r", "default()"]
fetch = ["git", "fetch"]
push = ["git", "push"]

history = ["log", "-r", "last()"]

showl = ["show", "@-"]

drafts = ["log", "-r", "draft()"]
autorebase = ["util", "exec", "--", "bash", "-c", """
#!/usr/bin/env bash
set -euo pipefail
jj rebase -s "roots(draft_autorebase())" -d "trunk()"
jj simplify-parents -r "draft_autorebase()"
""", ""]

tug = [
    "bookmark",
    "move",
    "--from",
    "closest_bookmark(@-)",
    "--to",
    "@-"
]

[colors]
"diff token" = { underline = false }

[templates]
git_push_bookmark = '"jgilchrist/change/" ++ change_id.short()'

log = '''
if(root,
  format_root_commit(self),
  label(if(current_working_copy, "working_copy"),
    concat(
      separate(" ",
        if(!(empty && current_working_copy) && !immutable, format_short_change_id_with_hidden_and_divergent_info(self)),
        if(immutable || divergent, format_short_commit_id(commit_id)),
        if(!mine, format_short_signature_oneline(author)),
        if(immutable, format_timestamp(commit_timestamp(self))),
        tags,
        working_copies,
        if(config("ui.show-cryptographic-signatures").as_boolean(),
          format_short_cryptographic_signature(signature)),
        if(empty, label("empty", "(empty)")),
        if(description,
          description.first_line(),
          label(if(empty, "empty"), description_placeholder),
        ),
        bookmarks,
        if(current_working_copy && !empty, "\n" ++ diff.stat(80)),
      ) ++ "\n",
    ),
  )
)
'''

draft_commit_description = '''
concat(
  description,
  surround(
    "\nJJ: This change has the following diffstat:\n", "",
    indent("JJ:   ", diff.summary()),
  ),
  "JJ: \nJJ: ignore-rest\n",
  diff.git(),
)
'''

[template-aliases]
'format_timestamp(timestamp)' = 'timestamp.ago()'

'format_short_signature(signature)' = '''
  coalesce(signature.name(), email_placeholder)'''

[hints]
resolving-conflicts = false
